plugins {
    id 'de.dfki.mary.voicebuilding-legacy' version '5.2.0'
    id 'de.undercouch.download' version '3.1.0'
}

group 'de.dfki.mary'
version '5.2-SNAPSHOT'

voice {
    name = 'upmc-pierre'
    language = 'fr'
    gender = 'male'
    type = 'unit selection'
    description = 'A male French unit selection voice, built at ISIR (UPMC) using data recorded by Pierre Chauvin'
    license {
        name = 'Creative Commons Attribution-ShareAlike 3.0 Unported'
        shortName = 'CC-BY-SA'
        url = 'http://mary.dfki.de/download/by-sa-3.0.html'
    }
    samplingRate = 16000
}

import de.undercouch.gradle.tasks.download.Download

task downloadAudio(type: Download) {
    ext.destFile = file("$buildDir/audio.tar")
    src "https://github.com/marytts/upmc-pierre-data/releases/download/v0.1/$destFile.name"
    dest destFile.parentFile
    overwrite false
    acceptAnyCertificate true
}

task downloadData(type: Download) {
    ext.destFile = file("$buildDir/upmc-pierre-data.zip")
    src "https://github.com/marytts/upmc-pierre-data/archive/v0.1.zip"
    dest destFile
    overwrite false
    acceptAnyCertificate true
}

processDataResources {
    dependsOn downloadAudio, downloadData
    from tarTree(downloadAudio.destFile)
    from zipTree(downloadData.destFile), {
        include '**/*.txt', '**/*.lab'
        filesMatching '**/*.txt', {
            path = "text/$it.name"
        }
        filesMatching '**/*.lab', {
            path = "lab/$it.name"
        }
        includeEmptyDirs = false
    }
}

wav {
    srcDir = file("$processDataResources.destinationDir/audio")
    srcFileExt = 'flac'
}

task text(type: Copy) {
    from processDataResources
    into buildDir
    include 'text/*.txt'
}

task lab(type: Copy) {
    from processDataResources
    into buildDir
    include 'lab/*.lab'
}

legacyInit {
    dependsOn wav, text, lab
    def basenameListFile = file("$buildDir/basenames.lst")
    outputs.files basenameListFile
    doLast {
        basenameListFile.withWriter { basenameList ->
            fileTree(wav.destDir).collect {
                it.name - '.wav'
            }.minus([
                    'text_0237',
                    'text_0281',
                    'text_0292',
                    'text_0337',
                    'text_0341',
                    'text_0346',
                    'text_0363',
                    'text_0411',
                    'text_0512',
                    'text_0529',
                    'text_0530',
                    'text_0578',
                    'text_0624',
                    'text_0643',
                    'text_0737',
                    'text_0898',
                    'text_0908',
                    'text_0916'
            ]).each {
                basenameList.writeLine it
            }
        }
    }
}

generateVoiceConfig {
    afterEvaluate {
        config << [
                targetCostWeights: "jar:/marytts/voice/$voice.nameCamelCase/customTargetCostWeights.txt",
                joinCostWeights  : "jar:/marytts/voice/$voice.nameCamelCase/customJoinCostWeights.txt",
        ]
    }
}
